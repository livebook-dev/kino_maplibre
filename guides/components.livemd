# Components

```elixir
Mix.install([
  {:maplibre, "~> 0.1.0"},
  {:kino_maplibre, "~> 0.1.0"}
])

alias MapLibre, as: Ml
```

## Kinos

### MapLibre

This integration automatically renders the `MapLibre` struct as a map:

```elixir
Ml.new(
  center: {-90.73414, 14.55524},
  zoom: 13,
  style: "https://api.maptiler.com/maps/basic/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL"
)
|> Ml.update_layer("building",
  paint: [
    fill_color: ["interpolate", ["exponential", 0.5], ["zoom"], 15, "#e2714b", 22, "#eee695"],
    fill_opacity: ["interpolate", ["exponential", 0.5], ["zoom"], 15, 0, 22, 1]
  ]
)
```

### Kino.MapLibre

`Kino.MapLibre` allows you to render a regular `MapLibre` map and then adds an initial support for the [Evented](https://maplibre.org/maplibre-gl-js-docs/api/events/#evented) API to update the map.

There are two types of maps: static and dynamic. Essentially, a dynamic map can be updated on
the fly without having to be re-evaluated. To make a map dynamic you need to wrap it in `Kino.MapLibre.new/1`

All functions are available for both map types.

```elixir
map =
  Ml.new(center: {-68.13734351262877, 45.137451890638886}, zoom: 3)
  # This makes the map dynamic
  |> Kino.MapLibre.new()
```

```elixir
# These markers will be added with no need to re-evaluate the map above
Kino.MapLibre.add_marker(map, {-69, 50})
Kino.MapLibre.add_marker(map, {-68, 45}, color: "red", draggable: true)
```

```elixir
# This is a static map and the markers will be added on evaluation
Ml.new(center: {-68.13734351262877, 45.137451890638886}, zoom: 3)
|> Kino.MapLibre.add_marker({-68, 45}, color: "red", draggable: true)
|> Kino.MapLibre.add_marker({-69, 50})
```

You can make a static map dynamic at any moment wrapping it in `Kino.MapLibre.new/1`

```elixir
map =
  Ml.new(center: {-68.13734351262877, 45.137451890638886}, zoom: 3)
  # These markers will be added on evaluation
  |> Kino.MapLibre.add_marker({-68, 45}, color: "red", draggable: true)
  |> Kino.MapLibre.add_marker({-69, 50})
  # This makes the map dynamic
  |> Kino.MapLibre.new()
```

```elixir
# This navigation controls will be added on the fly
Kino.MapLibre.add_nav_controls(map)
```
